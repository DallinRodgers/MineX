<div id="home">
  <div class="container-custom">
    <div>
      <div class="skew">
        <div class="title">
          <h1>Welcome to</h1> <img src="/img/logo.png" alt="Logo">
        </div>
      </div>
      <div id="main-form">
        <div id="create-new">
          <h2>Need A New Ship?</h2>
          <a href="/" id="btn-new-ship" class="primary-btn">Build A New Ship!</a>
        </div>
        <div id="find-my-ship">
          <h2>Already Have a Ship?</h2>
          <a href="/" id="btn-find-ship" class="primary-btn">Find Your Ship!</a>
        </div>
      </div>
      <div id="game-description">
        <p>In MineX, players operate a galactic mining company. They are tasked with gathering precious metals from
          distant
          asteroids. After each trip, the ores can be sold to buy additional and better rocket ships. These new ships
          will allow access to better ores and greater wealth!</p>
      </div>

      <div id="myNewModal" class="my-modal">

        <!-- Modal content -->
        <div class="modal-content">
          <span class="close">&times;</span>
          <form id="new-ship-form">
            <div class="input-row">
              <div class="input-col">
                <label for="firstName">First Name: </label>
                <input type="text" name="firstName" id="input-first-name" placeholder="First Name" required>
              </div>
              <div class="input-col">
                <label for="lastName">Last Name: </label>
                <input type="text" name="lastName" id="input-last-name" placeholder="Last Name" required>
              </div>
            </div>
            <div class="input-row">
              <div class="input-col">
                <label for="username">Username: </label>
                <input type="text" name="username" id="input-username" placeholder="Username" required>
              </div>
              <div class="input-col">
                <label for="password">Password: </label>
                <input type="password" name="password" id="input-password" placeholder="Password" required>
              </div>
            </div>
            <div class="input-row">
              <div class="input-col">
                <label for="email">Email: </label>
                <input type="email" name="email" id="input-email" placeholder="Email" required>
              </div>
            </div>
            <input type="submit" class="submit" id="new-submit">
          </form>
        </div>

      </div>

      <div id="myFindModal" class="my-modal">

        <!-- Modal content -->
        <div class="modal-content">
          <span class="close">&times;</span>
          <form id="find-ship-form">
            <div class="input-row">
              <label for="username">Username: </label>
              <input type="text" name="username" placeholder="Username" id="find-username" required>
              <label for="password">Password: </label>
              <input type="password" name="password" placeholder="Password" id="find-password" required>
            </div>
            <input type="submit" class="submit" id="find-submit">
          </form>
        </div>

      </div>
    </div>
  </div>
</div>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="/js/index.js"></script>
<script src="/js/three.min.js"></script>
<script>
  let scene, camera, renderer, stars, starGeo;

  function init() {

    scene = new THREE.Scene();

    camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);
    camera.position.z = 1;
    camera.rotation.x = Math.PI / 2;

    renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    starGeo = new THREE.Geometry();
    for (let i = 0; i < 6000; i++) {
      star = new THREE.Vector3(
        Math.random() * 600 - 300,
        Math.random() * 600 - 300,
        Math.random() * 600 - 300
      );
      star.velocity = 0;
      star.acceleration = 0.001;
      starGeo.vertices.push(star);
    }

    let sprite = new THREE.TextureLoader().load('/img/star.png');
    let starMaterial = new THREE.PointsMaterial({
      color: 0xaaaaaa,
      size: 0.7,
      map: sprite
    });

    stars = new THREE.Points(starGeo, starMaterial);
    scene.add(stars);

    window.addEventListener("resize", onWindowResize, false);

    animate();
  }
  function onWindowResize() {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  }
  function animate() {
    starGeo.vertices.forEach(p => {
      p.velocity += p.acceleration
      p.y -= p.velocity;

      if (p.y < -200) {
        p.y = 200;
        p.velocity = 0;
      }
    });
    starGeo.verticesNeedUpdate = true;
    stars.rotation.y += 0.002;

    renderer.render(scene, camera);
    requestAnimationFrame(animate);
  }
  init();
</script>